version: "3.9"

services:
    db:
        image: postgres
        user: root
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_HOST=${POSTGRES_HOST}
        ports:
            - "${POSTGRES_PORT}:5432"

    adminer:
        image: adminer
        restart: always
        ports:
            - "8080:8080"
        depends_on:
            db:
                condition: service_healthy
    backend:
        build:
            context: ./time_manager/backend
        command: bash -c "cd ./internal/db_migrations && alembic upgrade head && cd .. && cd .. && uvicorn main:app --host 0.0.0.0 --port 8000"
        user: root
        restart: always
        volumes:
            - ./time_manager/backend:/usr/src/code
        ports:
            - "8000:8000"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy
    tg_bot:
        build:
            context: ./time_manager/tg_bot
        command: bash -c "python main.py"
        user: root
        restart: always
        volumes:
            - ./time_manager/tg_bot:/usr/src/code
        ports:
            - "8081:8081"
        env_file:
            - .env
        depends_on:
            db:
                condition: service_healthy

volumes:
    postgres_data:
        driver: local
